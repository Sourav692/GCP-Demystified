Dataproc eases Hadoop management. And let's start on this slide here from the left. So, when you're running Hadoop on premise you've got your code to worry about. You've got your monitoring and health of the server. You've got your development integration. You've got your scaling. You've got to submit jobs. You've got to handle connectivity. You've got to worry about deployment and creation. Now, you can move a little bit farther, you could have a vendor do all that for you. And there are lots of vendors that will provide you with turn-key clusters. So they handle a lot of the setup and configuration of it, for a price. But then they're also, you still have to worry about, because you're running it on premise, you're still doing all the power, you still have physical servers, you've got all that on site to work with. Now, you could use bdutil, which are a free open source toolkits that can help with some of this sort of stuff, and you can basically build a bit of a solution where some of the pieces can be leveraged from the cloud: So like Google Cloud Platform Connectivity deployment and creation, and you're going to manage your custom code, and the monitoring and the developer integration and the scaling and jobs submission. The ultimate goal, and with the Google Cloud Dataproc that's what we're going to be able to achieve, is basically to offload monitoring health, developed integration, scaling job submission, connectivity, deployment creation, all of that over to Google Cloud platform. So we can really concentrate on our custom code pieces, and everything else we just use as a service and pay for. So what does a typical Dataproc deployment involve? Well, we go into Google Cloud platform, we could use the web console, we can use G-Cloud or we could use the APIs. We could basically request a cluster be created with several parameters like how many nodes we want on it, and the size of those nodes. We then click Create, and about 90 seconds later our cluster is ready to go. OK, you're saying, "Grant, is that really true?" Well, you bet. Let's give it a try. 
